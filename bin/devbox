#!/bin/bash

#                  ,$$$$$',$$$$$',$$$$$'
#                 ,$$$$$',$$$$$',$$$$$'           - - -- ---- ✈
#                ,$$$$$',$$$$$',$$$$$'   ᕦ(ò_óˇ)ᕤ いきましょう！
#               ,s$$$$',$$$$$',$$$$$'
#              ,$$$$$',$$$$$',$$$$$'       SΙΤΞΚ SYSTΞMS ©1985
#             ,$$$$$',$$$$$',$$$$$'

#             Disclaimer: This SOFTWARE PRODUCT is provided
#             by THE PROVIDER "as is", with all faults and
#             without warranty of any kind.

#             SΙΤΞΚ SYSTΞMS ©1985. All rights Reserved.

#///////////////////////////////////////////////////////////////////////////////

function up() {
  if [ ! -f Devboxfile ]; then
    echo -e "\n\033[39m  📦  Oops! Devboxfile not found.\033[0m\n"
    echo -e "\033[39m---> Generating a sample Devboxfile ...\033[0m\n"
    cp ${DEVBOX_ROOT_PATH}/boxes/community/railsbox/Devboxfile .
    echo -e "\033[39m     Edit Devboxfile to your liking then re-run this command.\033[0m\n"
    exit 1
  fi

  if [ ! -f docker-compose.yml ]; then
    cp ${DEVBOX_ROOT_PATH}/boxes/community/railsbox/docker-compose.yml .
  fi

  IFS='=' read -ra devbox_file <<< "$(head -n 1 Devboxfile)"
  box="${devbox_file[0]}"
  declare -a packets=${devbox_file[1]}
  box_type="community"

  if [ -d "${DEVBOX_ROOT_PATH}/boxes/custom/${box}" ]; then
    box_type="custom"
  fi

  box_path=${DEVBOX_ROOT_PATH}/boxes/${box_type}/${box}

  function getPacketPath() {
    if [ -f $(echo ${DEVBOX_ROOT_PATH}/packets/community/${1} | sed 's/\/community\//\/custom\//') ]; then
      echo ${DEVBOX_ROOT_PATH}/packets/community/${1} | sed 's/\/community\//\/custom\//'
    else
      echo ${DEVBOX_ROOT_PATH}/packets/community/${1}
    fi
  }

  # Generate Dockerfile
  cat $(getPacketPath alpha.pkt) > ${box_path}/Dockerfile
  for packet in "${packets[@]}"; do
    echo -e "" >> ${box_path}/Dockerfile
    cat $(getPacketPath ${packet}.pkt) >> ${box_path}/Dockerfile
  done
  echo -e "" >> ${box_path}/Dockerfile
  cat $(getPacketPath omega.pkt) >> ${box_path}/Dockerfile

  echo -e "\n\033[39m📦  Launching Devbox ...\033[0m\n"
  docker-compose up --build -d
}

function down() {
  docker-compose stop
}

function update() {
  command -v git >/dev/null 2>&1 || { echo "Git is not installed. Aborting." >&2; exit 1; }
  echo -e "\n\033[39m📦  Updating Devbox ...\033[0m\n"
  cd ${DEVBOX_ROOT_PATH} && git pull
}

function helpmenu() {
  echo "help me!"
}

#///////////////////////////////////////////////////////////////////////////////

#  ARGUMENT LOGIC

#///////////////////////////////////////////////////////////////////////////////
# http://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
# http://wiki.bash-hackers.org/howto/getopts_tutorial

while [ ! $# -eq 0 ]; do
  case "$1" in
    help | --help | -h)
      helpmenu
      exit
      ;;
    up)
      up
      exit
      ;;
    down)
      down
      exit
      ;;
    update)
      update
      exit
      ;;
  esac
  shift
done

if [ $# -eq 0 ]; then
  up
  exit
fi
